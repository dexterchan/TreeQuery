apply plugin: 'application'
apply plugin: 'java'

group 'org.treequery'
version '1.0-SNAPSHOT'
archivesBaseName = "TreeQueryDiscoveryService"
sourceCompatibility = 1.11
targetCompatibility = 1.11

ext {
    mockitoVersion = "2.23.0"
}

repositories {
    mavenCentral()
    maven {
        name "DynamoDB Local Release Repository"
        url "https://s3-us-west-2.amazonaws.com/dynamodb-local/release"
    }
}
buildscript {
    repositories {
        jcenter()
    }
    ext{
        shadowjarVersion = '4.0.3'
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:$shadowjarVersion"
    }
}
apply plugin: 'com.github.johnrengelman.shadow'


configurations{
    testImplementation{
        canBeResolved=true
    }
}

dependencies {
    implementation project(':TreeQueryStatic')
    implementation project(':TreeQueryDiscoveryServiceStatic')

    // AWS SDK
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.769')
    implementation 'com.amazonaws:aws-java-sdk-dynamodb'
    testImplementation 'com.amazonaws:DynamoDBLocal:[1.12,2.0)'
    testImplementation 'com.almworks.sqlite4java:sqlite4java:1.0.392'

    // Vertx Web Libs
    implementation('io.vertx:vertx-web:3.9.1')
    testImplementation 'io.vertx:vertx-web-client:3.9.1'
    testImplementation 'io.vertx:vertx-junit5:3.9.1'
    implementation 'io.vertx:vertx-health-check:3.9.1'

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile group: 'commons-cli', name: 'commons-cli', version: "$cliVersion"

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testImplementation "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation group: 'org.assertj', name: 'assertj-core', version: "$assetjVersion"
    testImplementation group: 'org.mockito', name: 'mockito-core', version: "$mockitoVersion"
    testImplementation group: 'org.mockito', name: 'mockito-junit-jupiter', version: "$mockitoVersion"
    testImplementation ('org.mock-server:mockserver-netty:3.10.8') {
        exclude group: 'xerces', module: 'xercesImpl'
    }
    testImplementation ('org.mock-server:mockserver-client-java:3.10.8') {
        exclude group: 'xerces', module: 'xercesImpl'
    }

    implementation group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
}

task copyNativeDeps(type: Copy) {
    from (configurations.testImplementation) {
        include "*.dylib"
        include "*.so"
        include "*.dll"
    }
    into 'build/libs'
}

test {
    useJUnitPlatform {
        excludeTags 'integration'
    }

    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }

    dependsOn copyNativeDeps
    systemProperty 'java.library.path', 'build/libs'
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    check.dependsOn it
    shouldRunAfter test
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }

    dependsOn copyNativeDeps
    systemProperty 'java.library.path', 'build/libs'
}

mainClassName="org.treequery.discoveryservice.Main"
shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    zip64 true
    mergeServiceFiles()
    with jar
}