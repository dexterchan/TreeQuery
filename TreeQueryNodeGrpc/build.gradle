buildscript {
    repositories {
        mavenCentral()
        jcenter()
    }
    dependencies {
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.9'
        classpath 'com.github.jengelman.gradle.plugins:shadow:4.0.2'
    }
}

plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
}

apply plugin: 'application'
apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'com.google.protobuf'
//apply plugin: 'com.github.johnrengelman.shadow'

group 'org.treequery'
version '1.0-SNAPSHOT'
archivesBaseName = "TreeQueryNodeGrpc"
sourceCompatibility = 1.8
targetCompatibility = 1.8
mainClassName = "org.treequery.grpc.server.Main"
repositories {
    mavenCentral()
    jcenter()
}

ext{
    grpcVersion = '1.21.0' // CURRENT_GRPC_VERSION
    protobufVersion = '3.8.0'
    protocVersion = protobufVersion
    commonscompressVersion = '1.18'
    springCloudVersion = 'Hoxton.SR1'
}

dependencies {
    compile project(':TreeQueryNodeBeam'), project(':TreeQueryNodeProto')

    // Spring Boot Eureka Client
    compile('org.springframework.boot:spring-boot-starter-web')
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    compile "org.springframework.cloud:spring-cloud-starter-feign:$feignVersion"
    testCompile('org.springframework.boot:spring-boot-starter-test')

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    compile group: 'com.google.code.gson', name: 'gson', version: "$gsonVersion"
    compile group: 'com.google.guava', name: 'guava', version: "$guavaVersion"

    testCompile group: 'org.assertj', name: 'assertj-core', version: "$assetjVersion"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "$mockitVersion"
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: "$mockitVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}
/*
shadowJar {
    zip64 true
    mergeServiceFiles()

}*/

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

startScripts.enabled = false

test {
    useJUnitPlatform {
        //includeTags 'io.beam.exp.cryptorealtime.model','controllers'
        excludeTags 'integration'
    }
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    check.dependsOn it
    shouldRunAfter test
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }
}


if(project.hasProperty('nexus')){
    apply from: rootProject.file('gradle/uploadNexus.gradle');
}