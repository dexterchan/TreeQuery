plugins {
    id 'org.springframework.boot' version '2.2.2.RELEASE'
    id 'io.spring.dependency-management' version '1.0.8.RELEASE'
    id 'java'
    id 'application'
    id 'maven'
    id 'com.google.protobuf' version '0.8.9'
    id 'com.github.johnrengelman.shadow' version '4.0.3'
}

group 'org.treequery'
version '1.0-SNAPSHOT'
archivesBaseName = "TreeQueryNodeGrpc"
sourceCompatibility = 1.11
targetCompatibility = 1.11
mainClassName = "org.treequery.grpc.server.Main"
repositories {
    mavenCentral()
}

ext{
    grpcVersion = '1.21.0' // CURRENT_GRPC_VERSION
    protobufVersion = '3.8.0'
    protocVersion = protobufVersion
    commonscompressVersion = '1.18'
    set('springCloudVersion', "Hoxton.SR1")
}

dependencies {
    compile project(':TreeQueryNodeBeam')
    compile project(':TreeQueryNodeProto')
    compile project(':TreeQueryDiscoveryService')
    compile project(':ServiceDiscoveryClient')
    compile project(':ServiceDiscoveryServer')

    compile "org.slf4j:slf4j-api:$slf4jVersion"
    compile "org.slf4j:slf4j-log4j12:$slf4jVersion"
    compile "org.apache.logging.log4j:log4j-core:$log4jVersion"

    // AWS SDK
    implementation platform('com.amazonaws:aws-java-sdk-bom:1.11.769')
    implementation 'com.amazonaws:aws-java-sdk-dynamodb'

    // Spring Boot + GRPC + Eureka
    compile 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-server'
    compile 'io.github.lognet:grpc-spring-boot-starter:3.5.3'
    testCompile ('org.springframework.boot:spring-boot-starter-test') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
    }

    compileOnly("org.projectlombok:lombok:${lombokVersion}")
    testCompileOnly("org.projectlombok:lombok:${lombokVersion}")
    annotationProcessor("org.projectlombok:lombok:${lombokVersion}")
    testAnnotationProcessor("org.projectlombok:lombok:${lombokVersion}")

    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: "${jacksonVersion}"
    compile group: 'com.google.code.gson', name: 'gson', version: "$gsonVersion"
    compile group: 'com.google.guava', name: 'guava', version: "$guavaVersion"

    testCompile group: 'org.assertj', name: 'assertj-core', version: "$assetjVersion"
    testCompile group: 'org.mockito', name: 'mockito-core', version: "$mockitVersion"
    testCompile group: 'org.mockito', name: 'mockito-junit-jupiter', version: "$mockitVersion"

    testCompile "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testCompile "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
}

shadowJar {
    manifest {
        attributes 'Main-Class': mainClassName
    }
    zip64 true
    mergeServiceFiles()
    with jar
}

startScripts.enabled = false

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}

configurations {
    all*.exclude module : 'spring-boot-starter-logging'
}

test {
    useJUnitPlatform {
        //includeTags 'io.beam.exp.cryptorealtime.model','controllers'
        excludeTags 'integration'
    }
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }
}

task integrationTest(type: Test) {
    useJUnitPlatform {
        includeTags 'integration'
    }
    check.dependsOn it
    shouldRunAfter test
    testLogging.showStandardStreams = true

    testLogging {
        events "passed", "skipped", "failed"
    }
}


if(project.hasProperty('nexus')){
    apply from: rootProject.file('gradle/uploadNexus.gradle')
}